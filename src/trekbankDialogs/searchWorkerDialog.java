/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package trekbankDialogs;

import TrekbankExceptions.NoWorkerSelectedException;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import trekbank.MainScreen;
import trekbankDatabaseObjects.Database;
import trekbankDatabaseObjects.Worker;

/**
 *
 * @author Johnny
 */
public class searchWorkerDialog extends java.awt.Dialog {

    private static ArrayList<Worker> selectedWorkers;
    /**
     * Creates new form searchProjectDialog
     */
    private searchWorkerDialog(java.awt.Frame parent, boolean modal, boolean multipleSelect) {
        super(parent, modal);
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        initComponents();
        selectedWorkers = new ArrayList<Worker>();
        searchFieldKeyReleased(null);
        setMinimumSize(new Dimension(257, 420));
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(new Point((screenSize.width - 240)/2, (screenSize.height - 412)/2));
        resultField.setMultipleMode(multipleSelect);
        caseInsensitive.setBackground(new Color(214,217,223));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        resultField = new java.awt.List();
        caseInsensitive = new javax.swing.JCheckBox();
        searchField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        jToggleButton1.setText("jToggleButton1");

        jButton1.setText("jButton1");

        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(214, 217, 223));
        setBounds(new java.awt.Rectangle(10, 10, 100, 100));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationRelativeTo(null);
        setMinimumSize(new java.awt.Dimension(200, 0));
        setTitle("Werkers zoeken");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        resultField.setBackground(new java.awt.Color(255, 255, 255));
        resultField.setMultipleMode(true);
        resultField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultFieldMouseClicked(evt);
            }
        });
        resultField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resultFieldActionPerformed(evt);
            }
        });
        resultField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                resultFieldKeyPressed(evt);
            }
        });

        caseInsensitive.setBackground(java.awt.Color.lightGray);
        caseInsensitive.setSelected(true);
        caseInsensitive.setText("Hoofdletter gevoeligheid");
        caseInsensitive.setToolTipText("Hier kunt u aangeven of gezocht moet worden met of zonder hoofdletters");
        caseInsensitive.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                caseInsensitiveItemStateChanged(evt);
            }
        });
        caseInsensitive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caseInsensitiveActionPerformed(evt);
            }
        });

        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });

        jLabel1.setText("Typ hier om te zoeken");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        okButton.setText("Ok");
        okButton.setToolTipText("Als u op deze knop klikt wordt de werker gebruikt die u geselecteerd hebt");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Annuleer");
        cancelButton.setToolTipText("Als u deze knop gebruikt wordt er geen werker geselecteerd en keert u terug naar waar u vandaan kwam");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(resultField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(caseInsensitive, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(okButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(caseInsensitive, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultField, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        // TODO add your handling code here:
        resultField.removeAll();
        for (Worker a : Database.searchWorkerByName(searchField.getText(), caseInsensitive.isSelected())){
            resultField.add(a.getName());
        }
    }//GEN-LAST:event_searchFieldKeyReleased

    private void caseInsensitiveItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_caseInsensitiveItemStateChanged
        // TODO add your handling code here:
        searchFieldKeyReleased(null);
    }//GEN-LAST:event_caseInsensitiveItemStateChanged

    private void caseInsensitiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caseInsensitiveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caseInsensitiveActionPerformed

    private void resultFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resultFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_resultFieldActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // TODO add your handling code here:
        for (String s : resultField.getSelectedItems()){
            selectedWorkers.add(Database.searchWorkerByExactName(s));
        }
        closeDialog(null);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        selectedWorkers = new ArrayList<Worker>();
        closeDialog(null);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void resultFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_resultFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            okButtonActionPerformed(null);
        }
    }//GEN-LAST:event_resultFieldKeyPressed

    private void resultFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultFieldMouseClicked
        if (!resultField.isMultipleMode() && evt.getClickCount() == 2) {
            okButtonActionPerformed(null);
        }
    }//GEN-LAST:event_resultFieldMouseClicked

    private void searchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            resultField.requestFocus();
        }
    }//GEN-LAST:event_searchFieldKeyPressed

    /**
     * This function shows a dialog where the user can search for users
     * @param parent the parent frame
     * @return returns the selected users
     * @throws NoUserSelectedException if no user was selected or the cancel button was pressed
     */
    public static ArrayList<Worker> showDialog(java.awt.Frame parent, boolean multipleSelect) throws NoWorkerSelectedException{
        searchWorkerDialog dialog = new searchWorkerDialog(parent, true, multipleSelect);
        dialog.setVisible(true);
        if (selectedWorkers.isEmpty()){
            throw new NoWorkerSelectedException();
        } else {        
            return selectedWorkers;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox caseInsensitive;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton okButton;
    private java.awt.List resultField;
    private javax.swing.JTextField searchField;
    // End of variables declaration//GEN-END:variables

}
