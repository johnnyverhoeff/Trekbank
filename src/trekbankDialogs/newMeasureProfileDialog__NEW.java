/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package trekbankDialogs;

import TrekbankExceptions.NoWorkOrderDefined;
import TrekbankExceptions.NoObjectSelectedException;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import jxl.read.biff.BiffException;
import trekbank.Excel;
import trekbank.MainScreen;
import trekbank.MeasureSubProfile;
import trekbank.WorkOrder;
import trekbankDatabaseObjects.TestedObject;

/**
 *
 * @author Johnny
 */
public class newMeasureProfileDialog__NEW extends java.awt.Dialog {

    private int currentMeasurement;
    private ArrayList<MeasureSubProfile> manuallyFilledInMeasurements;
    private static ArrayList<MeasureSubProfile> finalMeasurements;
    private WorkOrder workOrderObject;
    private ArrayList<TestedObject> fromDatabaseObject;
    
    private static WorkOrder workOrder;
    /**
     * Creates new form newMeasureProfileDialog
     */
    public newMeasureProfileDialog__NEW(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        initComponents();
        setSize(new Dimension(1000, 600));
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(new Point((screenSize.width - 1000)/2, (screenSize.height - 600)/2));
        
        setBackground(new Color(214,217,223));

        numberOfSerialMeasures.setModel(new SpinnerNumberModel(1, 1, 50, 1));
        setAddingMeasureItemEnabled(false);
        
        currentMeasurement = 1;
        
        manuallyFilledInMeasurements = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        currentMeasureLabel = new javax.swing.JLabel();
        numberOfSerialMeasures = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        descriptionForObjectTextBox = new javax.swing.JTextField();
        addToListAndNext = new javax.swing.JButton();
        finishedMeasureProfileButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        searchFromDatabaseButton = new javax.swing.JButton();
        selectedFromDatabaseLabel = new javax.swing.JLabel();
        addSelectedFromDatabaseButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        searchWorkOrderXlsButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        fromMeasureNumberSpinner = new javax.swing.JSpinner();
        addFromWorkOrderButton = new javax.swing.JButton();
        toMeasureNumberSpinner = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        customerTextBox = new javax.swing.JTextField();
        orderNumberTextBox = new javax.swing.JTextField();
        lockCustomerAndOrderNumberButton = new javax.swing.JButton();
        unlockCustomerAndOrderNumberButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        loadForObjectTextBox = new javax.swing.JTextField();
        pickStandardDescriptionAndLoadButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        certificatNumberTextBox = new javax.swing.JTextField();

        setBackground(new java.awt.Color(214, 217, 223));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        currentMeasureLabel.setText("De 1e meting, meet");

        numberOfSerialMeasures.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numberOfSerialMeasuresStateChanged(evt);
            }
        });

        jLabel3.setText("voorwerpen");

        jLabel4.setText("Geef een beschrijving voor deze voorwerpen");

        addToListAndNext.setText("Toevoegen en Volgende >");
        addToListAndNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToListAndNextActionPerformed(evt);
            }
        });

        finishedMeasureProfileButton.setText("Toevoegen");
        finishedMeasureProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishedMeasureProfileButtonActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        searchFromDatabaseButton.setText("Uit de database zoeken");
        searchFromDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFromDatabaseButtonActionPerformed(evt);
            }
        });

        addSelectedFromDatabaseButton.setText("Toevoegen");
        addSelectedFromDatabaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSelectedFromDatabaseButtonActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        searchWorkOrderXlsButton.setText("Zoeken naar werkbon");
        searchWorkOrderXlsButton.setMaximumSize(new java.awt.Dimension(145, 43));
        searchWorkOrderXlsButton.setMinimumSize(new java.awt.Dimension(145, 43));
        searchWorkOrderXlsButton.setPreferredSize(new java.awt.Dimension(145, 43));
        searchWorkOrderXlsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchWorkOrderXlsButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Vanaf welke meting: ");

        fromMeasureNumberSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fromMeasureNumberSpinnerStateChanged(evt);
            }
        });

        addFromWorkOrderButton.setText("Toevoegen");
        addFromWorkOrderButton.setEnabled(false);
        addFromWorkOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFromWorkOrderButtonActionPerformed(evt);
            }
        });

        toMeasureNumberSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                toMeasureNumberSpinnerStateChanged(evt);
            }
        });

        jLabel7.setText("Tot welke meting: ");

        jLabel5.setText("Klant: ");

        jLabel8.setText("Ordernummer: ");

        customerTextBox.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        orderNumberTextBox.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lockCustomerAndOrderNumberButton.setText("Ok");
        lockCustomerAndOrderNumberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lockCustomerAndOrderNumberButtonActionPerformed(evt);
            }
        });

        unlockCustomerAndOrderNumberButton.setText("Annuleer");
        unlockCustomerAndOrderNumberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unlockCustomerAndOrderNumberButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Geef een proeflast");

        pickStandardDescriptionAndLoadButton.setText("Of kies een standaard beschrijving en proeflast");
        pickStandardDescriptionAndLoadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickStandardDescriptionAndLoadButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("Geef een certificaatnummer op: ");

        certificatNumberTextBox.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(searchWorkOrderXlsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(fromMeasureNumberSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(toMeasureNumberSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(addFromWorkOrderButton)))
                        .addGap(10, 10, 10)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(selectedFromDatabaseLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(searchFromDatabaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(addSelectedFromDatabaseButton)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(certificatNumberTextBox))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(addToListAndNext)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel9))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(currentMeasureLabel)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(numberOfSerialMeasures, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(descriptionForObjectTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(loadForObjectTextBox))
                                        .addComponent(pickStandardDescriptionAndLoadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(finishedMeasureProfileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel8))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(customerTextBox, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(orderNumberTextBox)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lockCustomerAndOrderNumberButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(unlockCustomerAndOrderNumberButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(customerTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(orderNumberTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lockCustomerAndOrderNumberButton)
                    .addComponent(unlockCustomerAndOrderNumberButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchFromDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(selectedFromDatabaseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addSelectedFromDatabaseButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(searchWorkOrderXlsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(fromMeasureNumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(toMeasureNumberSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(addFromWorkOrderButton))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(currentMeasureLabel)
                            .addComponent(numberOfSerialMeasures, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(descriptionForObjectTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(loadForObjectTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pickStandardDescriptionAndLoadButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(certificatNumberTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(addToListAndNext)
                        .addGap(57, 57, 57)
                        .addComponent(finishedMeasureProfileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(101, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        finalMeasurements = null;
        workOrder = null;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void numberOfSerialMeasuresStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numberOfSerialMeasuresStateChanged
        if ((Integer) numberOfSerialMeasures.getValue() > 1){
            jLabel3.setText("voorwerpen");
            jLabel4.setText("Geef een beschrijving voor deze voorwerpen:");
        } else {
            jLabel3.setText("voorwerp");
            jLabel4.setText("Geef een beschrijving voor dit voorwerp:");
        }
    }//GEN-LAST:event_numberOfSerialMeasuresStateChanged

    private boolean checkIfEverythingIsFilledIn() {
        return !descriptionForObjectTextBox.getText().isEmpty() && !loadForObjectTextBox.getText().isEmpty() && !certificatNumberTextBox.getText().isEmpty();
    }
    
    private boolean checkIfDescriptionAndLoadIsEmpty() {
        return !descriptionForObjectTextBox.getText().isEmpty() && !loadForObjectTextBox.getText().isEmpty();
    }
    private void clearTextBoxes() {
        descriptionForObjectTextBox.setText("");
        loadForObjectTextBox.setText("");
        certificatNumberTextBox.setText("");
    }
    
    private void resetMeasureSettings() {
        clearTextBoxes();
        numberOfSerialMeasures.setValue(1);
    }
    
    private void addToListAndNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToListAndNextActionPerformed
        if (!checkIfEverythingIsFilledIn()) JOptionPane.showMessageDialog(null, "Verplichte onderdelen zijn niet ingevuld !", "Verplichte vakken leeg", JOptionPane.WARNING_MESSAGE);
        else {
            currentMeasurement++;
            currentMeasureLabel.setText("De " + currentMeasurement + "e meting, meet");

            addEnteredObjectToList();

            resetMeasureSettings();
        }
    }//GEN-LAST:event_addToListAndNextActionPerformed

    private boolean checkIfAtLeastOneIsFilledIn() {
        return !descriptionForObjectTextBox.getText().isEmpty() || !loadForObjectTextBox.getText().isEmpty() || !certificatNumberTextBox.getText().isEmpty();
    }
    
    private void addEnteredObjectToList() {
        manuallyFilledInMeasurements.add(
                    new MeasureSubProfile((Integer) numberOfSerialMeasures.getValue(), 
                    descriptionForObjectTextBox.getText(), certificatNumberTextBox.getText(), loadForObjectTextBox.getText()));
    }
    
    private void finishedMeasureProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishedMeasureProfileButtonActionPerformed
        if (checkIfEverythingIsFilledIn()) {
            addEnteredObjectToList();
            
        } else if (checkIfAtLeastOneIsFilledIn()) {
            int option = JOptionPane.showConfirmDialog(null, "Er is iets ingevuld\nWilt u dit negeren en het huidig meetprofiel gebruiken ?", "Er is iets ingevuld", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
            if (option != 0) return;
        } 
        
        if (manuallyFilledInMeasurements.isEmpty()) {
            JOptionPane.showMessageDialog(null, "U heeft nog geen te testen voorwerpen toegevoegd", "Er is niks om te testen", JOptionPane.ERROR_MESSAGE);
            return;
        } 
       
        // moet waarschijnlijk iets andere arraylist gebruiken
        workOrder = new WorkOrder(customerTextBox.getText(), orderNumberTextBox.getText(), manuallyFilledInMeasurements);
        dispose();
    }//GEN-LAST:event_finishedMeasureProfileButtonActionPerformed

    private void searchFromDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFromDatabaseButtonActionPerformed
        int n = 0;
        try {
            fromDatabaseObject = Dialogs.showSearchTestedObjectDialog(null, true);
            n = fromDatabaseObject.size();  
            
        } catch (NoObjectSelectedException ex) {
            ex.printStackTrace();
        }
        
        selectedFromDatabaseLabel.setText("Aantal voorwerpen geselecteerd: " + n);
    }//GEN-LAST:event_searchFromDatabaseButtonActionPerformed

    private void fromMeasureNumberSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_fromMeasureNumberSpinnerStateChanged
        int n = (int) fromMeasureNumberSpinner.getValue();
        int m = (int) toMeasureNumberSpinner.getValue();
        if (n > m) fromMeasureNumberSpinner.setValue(m);
    }//GEN-LAST:event_fromMeasureNumberSpinnerStateChanged

    private void searchWorkOrderXlsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchWorkOrderXlsButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Open een bestaande werkbon");
        fileChooser.setCurrentDirectory(new File("").getAbsoluteFile());
        
        fileChooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter excelFilter = new FileNameExtensionFilter("Excel file", "xls");
        fileChooser.addChoosableFileFilter(excelFilter);
        
        int userSelection = fileChooser.showOpenDialog(null);
        
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToOpen = fileChooser.getSelectedFile();
            try {
                workOrderObject = Excel.readExcelFile(fileToOpen);
                
                if (customerTextBox.getText().isEmpty() && orderNumberTextBox.getText().isEmpty()) {
                    customerTextBox.setText(workOrderObject.getKlant());
                    orderNumberTextBox.setText(workOrderObject.getOrderNumber());
                } else if (!workOrderObject.getKlant().equals(customerTextBox.getText()) || !workOrderObject.getOrderNumber().equals(orderNumberTextBox.getText())) {
                    int option = JOptionPane.showConfirmDialog(null, "Klant en/of ordernummer komt niet overeen\nWilt u deze vervangen ?", "Mismatch", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
                    if (option != 0) return;
                    else {
                        customerTextBox.setText(workOrderObject.getKlant());
                        orderNumberTextBox.setText(workOrderObject.getOrderNumber());
                    }
                }
                lockCustomerAndOrderNumberButtonActionPerformed(null);
                addFromWorkOrderButton.setEnabled(true);
                fromMeasureNumberSpinner.setEnabled(true);
                toMeasureNumberSpinner.setEnabled(true);
                fromMeasureNumberSpinner.setModel(new SpinnerNumberModel(1, 1, workOrderObject.getMeasureObjects().size(), 1));
                toMeasureNumberSpinner.setModel(new SpinnerNumberModel(workOrderObject.getMeasureObjects().size(), 1, workOrderObject.getMeasureObjects().size(), 1));
                
                
                
            } catch (IOException | BiffException e) {
                JOptionPane.showMessageDialog(null, "Er is een fout bij het openen van het bestand", "Fout", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_searchWorkOrderXlsButtonActionPerformed

    private void toMeasureNumberSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_toMeasureNumberSpinnerStateChanged
        int n = (int) fromMeasureNumberSpinner.getValue();
        int m = (int) toMeasureNumberSpinner.getValue();
        if (n > m) toMeasureNumberSpinner.setValue(n);
    }//GEN-LAST:event_toMeasureNumberSpinnerStateChanged

    private void addFromWorkOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFromWorkOrderButtonActionPerformed
        for (int i = (int) fromMeasureNumberSpinner.getValue() - 1; i < (int) toMeasureNumberSpinner.getValue(); i++) {
            System.out.println(workOrderObject.getMeasureObjects().get(i).toString());
        }
        
        if (workOrderObject != null){
            int added = 0;
            for (int i = (int) fromMeasureNumberSpinner.getValue() - 1; i < (int) toMeasureNumberSpinner.getValue(); i++) {
                manuallyFilledInMeasurements.add(workOrderObject.getMeasureObjects().get(i));
                added++;
            }
            currentMeasurement += added;
            currentMeasureLabel.setText("De " + currentMeasurement + "e meting, meet");
            addFromWorkOrderButton.setEnabled(false);
        }
    }//GEN-LAST:event_addFromWorkOrderButtonActionPerformed

    private void addSelectedFromDatabaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSelectedFromDatabaseButtonActionPerformed
        for (TestedObject to : fromDatabaseObject) {
            System.out.println(to.toString());
        }
    }//GEN-LAST:event_addSelectedFromDatabaseButtonActionPerformed

    private void lockCustomerAndOrderNumberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lockCustomerAndOrderNumberButtonActionPerformed
        boolean bothEmpty = customerTextBox.getText().isEmpty() || orderNumberTextBox.getText().isEmpty();
        if (bothEmpty) JOptionPane.showMessageDialog(null, "Klant en/of ordernummer zijn niet ingevuld !", "Verplichte vakken leeg", JOptionPane.WARNING_MESSAGE);
        else {
            setCustomerAndOrderNumberEnabled(false);
            setAddingMeasureItemEnabled(true);
        }
    }//GEN-LAST:event_lockCustomerAndOrderNumberButtonActionPerformed

    private void unlockCustomerAndOrderNumberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unlockCustomerAndOrderNumberButtonActionPerformed
        setCustomerAndOrderNumberEnabled(true);
        setAddingMeasureItemEnabled(false);
    }//GEN-LAST:event_unlockCustomerAndOrderNumberButtonActionPerformed

    private void pickStandardDescriptionAndLoadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickStandardDescriptionAndLoadButtonActionPerformed
        String beschrijving = "standaard beschrijving";
        String proeflast = "12345";
        // hierboven haalt het op van de standaard beschrijvingen en proeflast;
        int option = 2;
        if (checkIfDescriptionAndLoadIsEmpty()) {
            option = JOptionPane.showConfirmDialog(null, "De beschrijving en/of proeflast is niet leeg\nWilt u deze overschrijven ?", "Overschrijven ?", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);    
        }
        if (!checkIfDescriptionAndLoadIsEmpty() || option == 0) {
            descriptionForObjectTextBox.setText(beschrijving);
            loadForObjectTextBox.setText(proeflast);
        }
    }//GEN-LAST:event_pickStandardDescriptionAndLoadButtonActionPerformed

    
    
    
    private void setCustomerAndOrderNumberEnabled(boolean enabled) {
        customerTextBox.setEnabled(enabled);
        orderNumberTextBox.setEnabled(enabled);
    }
    
    private void setAddingMeasureItemEnabled(boolean enabled) {
        numberOfSerialMeasures.setEnabled(enabled);
        descriptionForObjectTextBox.setEnabled(enabled);
        loadForObjectTextBox.setEnabled(enabled);
        certificatNumberTextBox.setEnabled(enabled);
        
        pickStandardDescriptionAndLoadButton.setEnabled(enabled);
        addToListAndNext.setEnabled(enabled);
        
        finishedMeasureProfileButton.setEnabled(enabled);
    }
    
    /**
     * 
     */
    public static WorkOrder showDialog(java.awt.Frame parent) throws NoWorkOrderDefined {
        newMeasureProfileDialog__NEW dialog = new newMeasureProfileDialog__NEW(parent, true);
        dialog.setVisible(true);
        
        if (workOrder == null){
            throw new NoWorkOrderDefined();
        } else {
            return workOrder;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFromWorkOrderButton;
    private javax.swing.JButton addSelectedFromDatabaseButton;
    private javax.swing.JButton addToListAndNext;
    private javax.swing.JTextField certificatNumberTextBox;
    private javax.swing.JLabel currentMeasureLabel;
    private javax.swing.JTextField customerTextBox;
    private javax.swing.JTextField descriptionForObjectTextBox;
    private javax.swing.JButton finishedMeasureProfileButton;
    private javax.swing.JSpinner fromMeasureNumberSpinner;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField loadForObjectTextBox;
    private javax.swing.JButton lockCustomerAndOrderNumberButton;
    private javax.swing.JSpinner numberOfSerialMeasures;
    private javax.swing.JTextField orderNumberTextBox;
    private javax.swing.JButton pickStandardDescriptionAndLoadButton;
    private javax.swing.JButton searchFromDatabaseButton;
    private javax.swing.JButton searchWorkOrderXlsButton;
    private javax.swing.JLabel selectedFromDatabaseLabel;
    private javax.swing.JSpinner toMeasureNumberSpinner;
    private javax.swing.JButton unlockCustomerAndOrderNumberButton;
    // End of variables declaration//GEN-END:variables
}
